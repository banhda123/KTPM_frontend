{"ast":null,"code":"var _jsxFileName = \"D:\\\\Kientruc\\\\src\\\\core\\\\components\\\\Pagination.js\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PaginationContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: 30px;\n`;\n_c = PaginationContainer;\nconst PageList = styled.ul`\n  display: flex;\n  list-style: none;\n  padding: 0;\n  margin: 0;\n`;\n_c2 = PageList;\nconst PageItem = styled.li`\n  margin: 0 5px;\n`;\n_c3 = PageItem;\nconst PageButton = styled.button`\n  padding: 8px 12px;\n  border: 1px solid ${props => props.active ? '#0066cc' : '#ddd'};\n  background-color: ${props => props.active ? '#0066cc' : '#fff'};\n  color: ${props => props.active ? '#fff' : '#333'};\n  border-radius: 4px;\n  cursor: pointer;\n  transition: all 0.3s;\n  \n  &:hover {\n    background-color: ${props => props.active ? '#0055aa' : '#f5f5f5'};\n  }\n  \n  &:disabled {\n    background-color: #f5f5f5;\n    color: #999;\n    cursor: not-allowed;\n  }\n`;\n_c4 = PageButton;\nconst PageEllipsis = styled.span`\n  padding: 8px 12px;\n  color: #666;\n`;\n_c5 = PageEllipsis;\nconst Pagination = ({\n  currentPage,\n  totalItems,\n  itemsPerPage,\n  onPageChange\n}) => {\n  // Calculate total pages\n  const totalPages = Math.ceil(totalItems / itemsPerPage);\n\n  // Don't render pagination if there's only one page\n  if (totalPages <= 1) {\n    return null;\n  }\n\n  // Generate page numbers to display\n  const getPageNumbers = () => {\n    const pageNumbers = [];\n    const maxPagesToShow = 5; // Show at most 5 page numbers\n\n    if (totalPages <= maxPagesToShow) {\n      // If total pages is less than max, show all pages\n      for (let i = 1; i <= totalPages; i++) {\n        pageNumbers.push(i);\n      }\n    } else {\n      // Always show first page\n      pageNumbers.push(1);\n\n      // Calculate start and end of middle pages\n      let startPage = Math.max(2, currentPage - 1);\n      let endPage = Math.min(totalPages - 1, currentPage + 1);\n\n      // Adjust if at the beginning or end\n      if (currentPage <= 2) {\n        endPage = 4;\n      } else if (currentPage >= totalPages - 1) {\n        startPage = totalPages - 3;\n      }\n\n      // Add ellipsis after first page if needed\n      if (startPage > 2) {\n        pageNumbers.push('...');\n      }\n\n      // Add middle pages\n      for (let i = startPage; i <= endPage; i++) {\n        pageNumbers.push(i);\n      }\n\n      // Add ellipsis before last page if needed\n      if (endPage < totalPages - 1) {\n        pageNumbers.push('...');\n      }\n\n      // Always show last page\n      pageNumbers.push(totalPages);\n    }\n    return pageNumbers;\n  };\n  const pageNumbers = getPageNumbers();\n  return /*#__PURE__*/_jsxDEV(PaginationContainer, {\n    children: /*#__PURE__*/_jsxDEV(PageList, {\n      children: [/*#__PURE__*/_jsxDEV(PageItem, {\n        children: /*#__PURE__*/_jsxDEV(PageButton, {\n          onClick: () => onPageChange(currentPage - 1),\n          disabled: currentPage === 1,\n          children: \"\\xAB\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), pageNumbers.map((page, index) => /*#__PURE__*/_jsxDEV(PageItem, {\n        children: page === '...' ? /*#__PURE__*/_jsxDEV(PageEllipsis, {\n          children: \"...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(PageButton, {\n          active: page === currentPage,\n          onClick: () => onPageChange(page),\n          children: page\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 15\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(PageItem, {\n        children: /*#__PURE__*/_jsxDEV(PageButton, {\n          onClick: () => onPageChange(currentPage + 1),\n          disabled: currentPage === totalPages,\n          children: \"\\xBB\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n};\n_c6 = Pagination;\nexport default Pagination;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"PaginationContainer\");\n$RefreshReg$(_c2, \"PageList\");\n$RefreshReg$(_c3, \"PageItem\");\n$RefreshReg$(_c4, \"PageButton\");\n$RefreshReg$(_c5, \"PageEllipsis\");\n$RefreshReg$(_c6, \"Pagination\");","map":{"version":3,"names":["React","styled","jsxDEV","_jsxDEV","PaginationContainer","div","_c","PageList","ul","_c2","PageItem","li","_c3","PageButton","button","props","active","_c4","PageEllipsis","span","_c5","Pagination","currentPage","totalItems","itemsPerPage","onPageChange","totalPages","Math","ceil","getPageNumbers","pageNumbers","maxPagesToShow","i","push","startPage","max","endPage","min","children","onClick","disabled","fileName","_jsxFileName","lineNumber","columnNumber","map","page","index","_c6","$RefreshReg$"],"sources":["D:/Kientruc/src/core/components/Pagination.js"],"sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nconst PaginationContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: 30px;\n`;\n\nconst PageList = styled.ul`\n  display: flex;\n  list-style: none;\n  padding: 0;\n  margin: 0;\n`;\n\nconst PageItem = styled.li`\n  margin: 0 5px;\n`;\n\nconst PageButton = styled.button`\n  padding: 8px 12px;\n  border: 1px solid ${props => props.active ? '#0066cc' : '#ddd'};\n  background-color: ${props => props.active ? '#0066cc' : '#fff'};\n  color: ${props => props.active ? '#fff' : '#333'};\n  border-radius: 4px;\n  cursor: pointer;\n  transition: all 0.3s;\n  \n  &:hover {\n    background-color: ${props => props.active ? '#0055aa' : '#f5f5f5'};\n  }\n  \n  &:disabled {\n    background-color: #f5f5f5;\n    color: #999;\n    cursor: not-allowed;\n  }\n`;\n\nconst PageEllipsis = styled.span`\n  padding: 8px 12px;\n  color: #666;\n`;\n\nconst Pagination = ({ currentPage, totalItems, itemsPerPage, onPageChange }) => {\n  // Calculate total pages\n  const totalPages = Math.ceil(totalItems / itemsPerPage);\n  \n  // Don't render pagination if there's only one page\n  if (totalPages <= 1) {\n    return null;\n  }\n  \n  // Generate page numbers to display\n  const getPageNumbers = () => {\n    const pageNumbers = [];\n    const maxPagesToShow = 5; // Show at most 5 page numbers\n    \n    if (totalPages <= maxPagesToShow) {\n      // If total pages is less than max, show all pages\n      for (let i = 1; i <= totalPages; i++) {\n        pageNumbers.push(i);\n      }\n    } else {\n      // Always show first page\n      pageNumbers.push(1);\n      \n      // Calculate start and end of middle pages\n      let startPage = Math.max(2, currentPage - 1);\n      let endPage = Math.min(totalPages - 1, currentPage + 1);\n      \n      // Adjust if at the beginning or end\n      if (currentPage <= 2) {\n        endPage = 4;\n      } else if (currentPage >= totalPages - 1) {\n        startPage = totalPages - 3;\n      }\n      \n      // Add ellipsis after first page if needed\n      if (startPage > 2) {\n        pageNumbers.push('...');\n      }\n      \n      // Add middle pages\n      for (let i = startPage; i <= endPage; i++) {\n        pageNumbers.push(i);\n      }\n      \n      // Add ellipsis before last page if needed\n      if (endPage < totalPages - 1) {\n        pageNumbers.push('...');\n      }\n      \n      // Always show last page\n      pageNumbers.push(totalPages);\n    }\n    \n    return pageNumbers;\n  };\n  \n  const pageNumbers = getPageNumbers();\n  \n  return (\n    <PaginationContainer>\n      <PageList>\n        {/* Previous button */}\n        <PageItem>\n          <PageButton \n            onClick={() => onPageChange(currentPage - 1)}\n            disabled={currentPage === 1}\n          >\n            &laquo;\n          </PageButton>\n        </PageItem>\n        \n        {/* Page numbers */}\n        {pageNumbers.map((page, index) => (\n          <PageItem key={index}>\n            {page === '...' ? (\n              <PageEllipsis>...</PageEllipsis>\n            ) : (\n              <PageButton\n                active={page === currentPage}\n                onClick={() => onPageChange(page)}\n              >\n                {page}\n              </PageButton>\n            )}\n          </PageItem>\n        ))}\n        \n        {/* Next button */}\n        <PageItem>\n          <PageButton \n            onClick={() => onPageChange(currentPage + 1)}\n            disabled={currentPage === totalPages}\n          >\n            &raquo;\n          </PageButton>\n        </PageItem>\n      </PageList>\n    </PaginationContainer>\n  );\n};\n\nexport default Pagination;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}