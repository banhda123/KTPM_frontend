{"ast":null,"code":"// CartModel.js - Defines the data structure for cart and handles data operations\n\nimport api from '../../../services/api';\nclass CartModel {\n  constructor(data = {}) {\n    this.items = data.items || [];\n    this.totalItems = data.totalItems || 0;\n    this.subtotal = data.subtotal || 0;\n    this.discount = data.discount || 0;\n    this.total = data.total || 0;\n  }\n\n  // Calculate cart totals\n  calculateTotals() {\n    this.totalItems = this.items.reduce((sum, item) => sum + item.quantity, 0);\n    this.subtotal = this.items.reduce((sum, item) => sum + item.price * item.quantity, 0);\n    this.total = this.subtotal - this.discount;\n    return this;\n  }\n\n  // Add item to cart\n  addItem(product, quantity = 1) {\n    const existingItemIndex = this.items.findIndex(item => item.productId === product.id);\n    if (existingItemIndex >= 0) {\n      // Update quantity if item already exists\n      this.items[existingItemIndex].quantity += quantity;\n    } else {\n      // Add new item\n      this.items.push({\n        id: `cart-item-${Date.now()}`,\n        productId: product.id,\n        name: product.name,\n        price: product.salePrice || product.price,\n        originalPrice: product.price,\n        image: product.images[0],\n        quantity\n      });\n    }\n    return this.calculateTotals();\n  }\n\n  // Update item quantity\n  updateItemQuantity(itemId, quantity) {\n    const itemIndex = this.items.findIndex(item => item.id === itemId);\n    if (itemIndex >= 0) {\n      if (quantity > 0) {\n        this.items[itemIndex].quantity = quantity;\n      } else {\n        // Remove item if quantity is 0 or negative\n        this.removeItem(itemId);\n      }\n    }\n    return this.calculateTotals();\n  }\n\n  // Remove item from cart\n  removeItem(itemId) {\n    this.items = this.items.filter(item => item.id !== itemId);\n    return this.calculateTotals();\n  }\n\n  // Clear cart\n  clearCart() {\n    this.items = [];\n    this.totalItems = 0;\n    this.subtotal = 0;\n    this.discount = 0;\n    this.total = 0;\n    return this;\n  }\n\n  // Apply discount\n  applyDiscount(amount) {\n    this.discount = amount;\n    this.total = this.subtotal - this.discount;\n    return this;\n  }\n\n  // Static methods for API operations\n  static async getCart() {\n    try {\n      const response = await api.get('/cart');\n      return new CartModel(response.data);\n    } catch (error) {\n      console.error('Error fetching cart:', error);\n      throw error;\n    }\n  }\n  static async addToCart(productId, quantity) {\n    try {\n      const response = await api.post('/cart/items', {\n        productId,\n        quantity\n      });\n      return new CartModel(response.data);\n    } catch (error) {\n      console.error('Error adding item to cart:', error);\n      throw error;\n    }\n  }\n  static async updateCartItem(itemId, quantity) {\n    try {\n      const response = await api.put(`/cart/items/${itemId}`, {\n        quantity\n      });\n      return new CartModel(response.data);\n    } catch (error) {\n      console.error('Error updating cart item:', error);\n      throw error;\n    }\n  }\n  static async removeCartItem(itemId) {\n    try {\n      const response = await api.delete(`/cart/items/${itemId}`);\n      return new CartModel(response.data);\n    } catch (error) {\n      console.error('Error removing cart item:', error);\n      throw error;\n    }\n  }\n  static async clearCart() {\n    try {\n      const response = await api.delete('/cart');\n      return new CartModel(response.data);\n    } catch (error) {\n      console.error('Error clearing cart:', error);\n      throw error;\n    }\n  }\n  static async applyPromoCode(code) {\n    try {\n      const response = await api.post('/cart/promo', {\n        code\n      });\n      return new CartModel(response.data);\n    } catch (error) {\n      console.error('Error applying promo code:', error);\n      throw error;\n    }\n  }\n}\nexport default CartModel;","map":{"version":3,"names":["api","CartModel","constructor","data","items","totalItems","subtotal","discount","total","calculateTotals","reduce","sum","item","quantity","price","addItem","product","existingItemIndex","findIndex","productId","id","push","Date","now","name","salePrice","originalPrice","image","images","updateItemQuantity","itemId","itemIndex","removeItem","filter","clearCart","applyDiscount","amount","getCart","response","get","error","console","addToCart","post","updateCartItem","put","removeCartItem","delete","applyPromoCode","code"],"sources":["D:/Kientruc/src/modules/cart/models/CartModel.js"],"sourcesContent":["// CartModel.js - Defines the data structure for cart and handles data operations\n\nimport api from '../../../services/api';\n\nclass CartModel {\n  constructor(data = {}) {\n    this.items = data.items || [];\n    this.totalItems = data.totalItems || 0;\n    this.subtotal = data.subtotal || 0;\n    this.discount = data.discount || 0;\n    this.total = data.total || 0;\n  }\n\n  // Calculate cart totals\n  calculateTotals() {\n    this.totalItems = this.items.reduce((sum, item) => sum + item.quantity, 0);\n    this.subtotal = this.items.reduce((sum, item) => sum + (item.price * item.quantity), 0);\n    this.total = this.subtotal - this.discount;\n    return this;\n  }\n\n  // Add item to cart\n  addItem(product, quantity = 1) {\n    const existingItemIndex = this.items.findIndex(item => item.productId === product.id);\n    \n    if (existingItemIndex >= 0) {\n      // Update quantity if item already exists\n      this.items[existingItemIndex].quantity += quantity;\n    } else {\n      // Add new item\n      this.items.push({\n        id: `cart-item-${Date.now()}`,\n        productId: product.id,\n        name: product.name,\n        price: product.salePrice || product.price,\n        originalPrice: product.price,\n        image: product.images[0],\n        quantity\n      });\n    }\n    \n    return this.calculateTotals();\n  }\n\n  // Update item quantity\n  updateItemQuantity(itemId, quantity) {\n    const itemIndex = this.items.findIndex(item => item.id === itemId);\n    \n    if (itemIndex >= 0) {\n      if (quantity > 0) {\n        this.items[itemIndex].quantity = quantity;\n      } else {\n        // Remove item if quantity is 0 or negative\n        this.removeItem(itemId);\n      }\n    }\n    \n    return this.calculateTotals();\n  }\n\n  // Remove item from cart\n  removeItem(itemId) {\n    this.items = this.items.filter(item => item.id !== itemId);\n    return this.calculateTotals();\n  }\n\n  // Clear cart\n  clearCart() {\n    this.items = [];\n    this.totalItems = 0;\n    this.subtotal = 0;\n    this.discount = 0;\n    this.total = 0;\n    return this;\n  }\n\n  // Apply discount\n  applyDiscount(amount) {\n    this.discount = amount;\n    this.total = this.subtotal - this.discount;\n    return this;\n  }\n\n  // Static methods for API operations\n  static async getCart() {\n    try {\n      const response = await api.get('/cart');\n      return new CartModel(response.data);\n    } catch (error) {\n      console.error('Error fetching cart:', error);\n      throw error;\n    }\n  }\n\n  static async addToCart(productId, quantity) {\n    try {\n      const response = await api.post('/cart/items', { productId, quantity });\n      return new CartModel(response.data);\n    } catch (error) {\n      console.error('Error adding item to cart:', error);\n      throw error;\n    }\n  }\n\n  static async updateCartItem(itemId, quantity) {\n    try {\n      const response = await api.put(`/cart/items/${itemId}`, { quantity });\n      return new CartModel(response.data);\n    } catch (error) {\n      console.error('Error updating cart item:', error);\n      throw error;\n    }\n  }\n\n  static async removeCartItem(itemId) {\n    try {\n      const response = await api.delete(`/cart/items/${itemId}`);\n      return new CartModel(response.data);\n    } catch (error) {\n      console.error('Error removing cart item:', error);\n      throw error;\n    }\n  }\n\n  static async clearCart() {\n    try {\n      const response = await api.delete('/cart');\n      return new CartModel(response.data);\n    } catch (error) {\n      console.error('Error clearing cart:', error);\n      throw error;\n    }\n  }\n\n  static async applyPromoCode(code) {\n    try {\n      const response = await api.post('/cart/promo', { code });\n      return new CartModel(response.data);\n    } catch (error) {\n      console.error('Error applying promo code:', error);\n      throw error;\n    }\n  }\n}\n\nexport default CartModel;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}