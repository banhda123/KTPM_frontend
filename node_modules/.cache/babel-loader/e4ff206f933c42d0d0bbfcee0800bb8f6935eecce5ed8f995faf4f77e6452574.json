{"ast":null,"code":"// ProductController.js - Handles business logic for product-related operations\n\nimport ProductModel from '../models/ProductModel';\nclass ProductController {\n  // Get all products with optional filtering\n  async getAllProducts(filters = {}) {\n    try {\n      return await ProductModel.getAll(filters);\n    } catch (error) {\n      console.error('Error in getAllProducts:', error);\n      throw new Error('Failed to fetch products. Please try again later.');\n    }\n  }\n\n  // Get a single product by ID\n  async getProductById(id) {\n    try {\n      return await ProductModel.getById(id);\n    } catch (error) {\n      console.error(`Error in getProductById for id ${id}:`, error);\n      throw new Error('Failed to fetch product details. Please try again later.');\n    }\n  }\n\n  // Get products by category\n  async getProductsByCategory(category, filters = {}) {\n    try {\n      return await ProductModel.getByCategory(category, filters);\n    } catch (error) {\n      console.error(`Error in getProductsByCategory for category ${category}:`, error);\n      throw new Error('Failed to fetch category products. Please try again later.');\n    }\n  }\n\n  // Search products\n  async searchProducts(query, filters = {}) {\n    try {\n      return await ProductModel.search(query, filters);\n    } catch (error) {\n      console.error(`Error in searchProducts for query ${query}:`, error);\n      throw new Error('Failed to search products. Please try again later.');\n    }\n  }\n\n  // Get featured products\n  async getFeaturedProducts(limit = 8) {\n    try {\n      return await ProductModel.getAll({\n        featured: true,\n        limit\n      });\n    } catch (error) {\n      console.error('Error in getFeaturedProducts:', error);\n      throw new Error('Failed to fetch featured products. Please try again later.');\n    }\n  }\n\n  // Get new arrivals\n  async getNewArrivals(limit = 8) {\n    try {\n      return await ProductModel.getAll({\n        new: true,\n        limit\n      });\n    } catch (error) {\n      console.error('Error in getNewArrivals:', error);\n      throw new Error('Failed to fetch new arrivals. Please try again later.');\n    }\n  }\n\n  // Get best selling products\n  async getBestSellers(limit = 8) {\n    try {\n      return await ProductModel.getAll({\n        sort: 'sales',\n        order: 'desc',\n        limit\n      });\n    } catch (error) {\n      console.error('Error in getBestSellers:', error);\n      throw new Error('Failed to fetch best sellers. Please try again later.');\n    }\n  }\n\n  // Get related products\n  async getRelatedProducts(productId, limit = 4) {\n    try {\n      const product = await this.getProductById(productId);\n      return await ProductModel.getAll({\n        category: product.category,\n        exclude: productId,\n        limit\n      });\n    } catch (error) {\n      console.error(`Error in getRelatedProducts for product ${productId}:`, error);\n      throw new Error('Failed to fetch related products. Please try again later.');\n    }\n  }\n}\nexport default new ProductController();","map":{"version":3,"names":["ProductModel","ProductController","getAllProducts","filters","getAll","error","console","Error","getProductById","id","getById","getProductsByCategory","category","getByCategory","searchProducts","query","search","getFeaturedProducts","limit","featured","getNewArrivals","new","getBestSellers","sort","order","getRelatedProducts","productId","product","exclude"],"sources":["D:/Kientruc/src/modules/products/controllers/ProductController.js"],"sourcesContent":["// ProductController.js - Handles business logic for product-related operations\n\nimport ProductModel from '../models/ProductModel';\n\nclass ProductController {\n  // Get all products with optional filtering\n  async getAllProducts(filters = {}) {\n    try {\n      return await ProductModel.getAll(filters);\n    } catch (error) {\n      console.error('Error in getAllProducts:', error);\n      throw new Error('Failed to fetch products. Please try again later.');\n    }\n  }\n\n  // Get a single product by ID\n  async getProductById(id) {\n    try {\n      return await ProductModel.getById(id);\n    } catch (error) {\n      console.error(`Error in getProductById for id ${id}:`, error);\n      throw new Error('Failed to fetch product details. Please try again later.');\n    }\n  }\n\n  // Get products by category\n  async getProductsByCategory(category, filters = {}) {\n    try {\n      return await ProductModel.getByCategory(category, filters);\n    } catch (error) {\n      console.error(`Error in getProductsByCategory for category ${category}:`, error);\n      throw new Error('Failed to fetch category products. Please try again later.');\n    }\n  }\n\n  // Search products\n  async searchProducts(query, filters = {}) {\n    try {\n      return await ProductModel.search(query, filters);\n    } catch (error) {\n      console.error(`Error in searchProducts for query ${query}:`, error);\n      throw new Error('Failed to search products. Please try again later.');\n    }\n  }\n\n  // Get featured products\n  async getFeaturedProducts(limit = 8) {\n    try {\n      return await ProductModel.getAll({ featured: true, limit });\n    } catch (error) {\n      console.error('Error in getFeaturedProducts:', error);\n      throw new Error('Failed to fetch featured products. Please try again later.');\n    }\n  }\n\n  // Get new arrivals\n  async getNewArrivals(limit = 8) {\n    try {\n      return await ProductModel.getAll({ new: true, limit });\n    } catch (error) {\n      console.error('Error in getNewArrivals:', error);\n      throw new Error('Failed to fetch new arrivals. Please try again later.');\n    }\n  }\n\n  // Get best selling products\n  async getBestSellers(limit = 8) {\n    try {\n      return await ProductModel.getAll({ sort: 'sales', order: 'desc', limit });\n    } catch (error) {\n      console.error('Error in getBestSellers:', error);\n      throw new Error('Failed to fetch best sellers. Please try again later.');\n    }\n  }\n\n  // Get related products\n  async getRelatedProducts(productId, limit = 4) {\n    try {\n      const product = await this.getProductById(productId);\n      return await ProductModel.getAll({\n        category: product.category,\n        exclude: productId,\n        limit\n      });\n    } catch (error) {\n      console.error(`Error in getRelatedProducts for product ${productId}:`, error);\n      throw new Error('Failed to fetch related products. Please try again later.');\n    }\n  }\n}\n\nexport default new ProductController();\n"],"mappings":"AAAA;;AAEA,OAAOA,YAAY,MAAM,wBAAwB;AAEjD,MAAMC,iBAAiB,CAAC;EACtB;EACA,MAAMC,cAAcA,CAACC,OAAO,GAAG,CAAC,CAAC,EAAE;IACjC,IAAI;MACF,OAAO,MAAMH,YAAY,CAACI,MAAM,CAACD,OAAO,CAAC;IAC3C,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAChD,MAAM,IAAIE,KAAK,CAAC,mDAAmD,CAAC;IACtE;EACF;;EAEA;EACA,MAAMC,cAAcA,CAACC,EAAE,EAAE;IACvB,IAAI;MACF,OAAO,MAAMT,YAAY,CAACU,OAAO,CAACD,EAAE,CAAC;IACvC,CAAC,CAAC,OAAOJ,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,kCAAkCI,EAAE,GAAG,EAAEJ,KAAK,CAAC;MAC7D,MAAM,IAAIE,KAAK,CAAC,0DAA0D,CAAC;IAC7E;EACF;;EAEA;EACA,MAAMI,qBAAqBA,CAACC,QAAQ,EAAET,OAAO,GAAG,CAAC,CAAC,EAAE;IAClD,IAAI;MACF,OAAO,MAAMH,YAAY,CAACa,aAAa,CAACD,QAAQ,EAAET,OAAO,CAAC;IAC5D,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,+CAA+CO,QAAQ,GAAG,EAAEP,KAAK,CAAC;MAChF,MAAM,IAAIE,KAAK,CAAC,4DAA4D,CAAC;IAC/E;EACF;;EAEA;EACA,MAAMO,cAAcA,CAACC,KAAK,EAAEZ,OAAO,GAAG,CAAC,CAAC,EAAE;IACxC,IAAI;MACF,OAAO,MAAMH,YAAY,CAACgB,MAAM,CAACD,KAAK,EAAEZ,OAAO,CAAC;IAClD,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,qCAAqCU,KAAK,GAAG,EAAEV,KAAK,CAAC;MACnE,MAAM,IAAIE,KAAK,CAAC,oDAAoD,CAAC;IACvE;EACF;;EAEA;EACA,MAAMU,mBAAmBA,CAACC,KAAK,GAAG,CAAC,EAAE;IACnC,IAAI;MACF,OAAO,MAAMlB,YAAY,CAACI,MAAM,CAAC;QAAEe,QAAQ,EAAE,IAAI;QAAED;MAAM,CAAC,CAAC;IAC7D,CAAC,CAAC,OAAOb,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACrD,MAAM,IAAIE,KAAK,CAAC,4DAA4D,CAAC;IAC/E;EACF;;EAEA;EACA,MAAMa,cAAcA,CAACF,KAAK,GAAG,CAAC,EAAE;IAC9B,IAAI;MACF,OAAO,MAAMlB,YAAY,CAACI,MAAM,CAAC;QAAEiB,GAAG,EAAE,IAAI;QAAEH;MAAM,CAAC,CAAC;IACxD,CAAC,CAAC,OAAOb,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAChD,MAAM,IAAIE,KAAK,CAAC,uDAAuD,CAAC;IAC1E;EACF;;EAEA;EACA,MAAMe,cAAcA,CAACJ,KAAK,GAAG,CAAC,EAAE;IAC9B,IAAI;MACF,OAAO,MAAMlB,YAAY,CAACI,MAAM,CAAC;QAAEmB,IAAI,EAAE,OAAO;QAAEC,KAAK,EAAE,MAAM;QAAEN;MAAM,CAAC,CAAC;IAC3E,CAAC,CAAC,OAAOb,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAChD,MAAM,IAAIE,KAAK,CAAC,uDAAuD,CAAC;IAC1E;EACF;;EAEA;EACA,MAAMkB,kBAAkBA,CAACC,SAAS,EAAER,KAAK,GAAG,CAAC,EAAE;IAC7C,IAAI;MACF,MAAMS,OAAO,GAAG,MAAM,IAAI,CAACnB,cAAc,CAACkB,SAAS,CAAC;MACpD,OAAO,MAAM1B,YAAY,CAACI,MAAM,CAAC;QAC/BQ,QAAQ,EAAEe,OAAO,CAACf,QAAQ;QAC1BgB,OAAO,EAAEF,SAAS;QAClBR;MACF,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOb,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,2CAA2CqB,SAAS,GAAG,EAAErB,KAAK,CAAC;MAC7E,MAAM,IAAIE,KAAK,CAAC,2DAA2D,CAAC;IAC9E;EACF;AACF;AAEA,eAAe,IAAIN,iBAAiB,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}